#!/bin/bash

set -e
set -x

function startENV()
{
    targetENV=${1}
    targetDb=${2}
    targetDbUser=${3}
    targetDbPwd=${4}
    targetAdminPort=${5}
    targetConfigPort=${6}
    targetENVIP=${7}
  if [[ ! -d "/apollo-admin/${targetENV}/scripts" ]];then
    #unzip /apollo-adminservice-${VERSION}-github.zip -d /apollo-admin/${targetENV}
    #unzip /apollo-configservice-${VERSION}-github.zip -d /apollo-config/${targetENV}

    if [ ! -d "/apollo-admin/${targetENV}" ];then
                # copy apollo-admin
                cp -rf /apollo-admin/dev/* /apollo-admin/${targetENV}/
                rm -rf /apollo-admin/${targetENV}/scripts
                mv  /apollo-admin/${targetENV}/scripts-default /apollo-admin/${targetENV}/scripts
                # copy apollo-config
                cp -rf /apollo-config/dev/* /apollo-config/${targetENV}/
                rm -rf /apollo-config/${targetENV}/scripts
                mv  /apollo-config/${targetENV}/scripts-default /apollo-config/${targetENV}/scripts
    elif [ "${targetENV}" = "dev" ];then
        echo "${targetENV} 已经存在"
    else
        echo "${targetENV} 已经存在"
    fi
    # localhost 更新
    if [ "${DEFAULT_HOST}" != "localhost" ];then
          #更新 ip 地址
          sed -i -e "s/localhost/${DEFAULT_HOST}/" /apollo-admin/${targetENV}/scripts/startup.sh
          sed -i -e "s/localhost/${DEFAULT_HOST}/" /apollo-config/${targetENV}/scripts/startup.sh
    else
          echo "DEFAULT_HOST = ${DEFAULT_HOST} "
    fi

    #DB
    sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -Dspring.datasource.url=${targetDb} \"" /apollo-config/${targetENV}/scripts/startup.sh
    sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -Dspring.datasource.url=${targetDb} \"" /apollo-admin/${targetENV}/scripts/startup.sh

    #DB User
    sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -Dspring.datasource.username=${targetDbUser} \"" /apollo-config/${targetENV}/scripts/startup.sh
    sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -Dspring.datasource.username=${targetDbUser} \"" /apollo-admin/${targetENV}/scripts/startup.sh

    #DB Pwd
    sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -Dspring.datasource.password=${targetDbPwd} \"" /apollo-config/${targetENV}/scripts/startup.sh
    sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -Dspring.datasource.password=${targetDbPwd} \"" /apollo-admin/${targetENV}/scripts/startup.sh

    #Server Port
    if [[ -n "${targetAdminPort}" ]];then
        sed -i -e "s/^SERVER_PORT=.*$/SERVER_PORT=${targetAdminPort}/" /apollo-admin/${targetENV}/scripts/startup.sh
    fi
    if [[ -n "${targetConfigPort}" ]];then
      	sed -i -e "s/^SERVER_PORT=.*$/SERVER_PORT=${targetConfigPort}/" /apollo-config/${targetENV}/scripts/startup.sh
        if [[ -n "${PORTAL_DB}" ]];then
            sed -i -r "/-D${targetENV}_meta=.*$/d" /apollo-portal/scripts/startup.sh
            sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -D${targetENV}_meta=http://localhost:${targetConfigPort}/\"" /apollo-portal/scripts/startup.sh
        fi
    fi
    #Server Distribute
    if [[ -n "${targetENVIP}" ]];then
        sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -Deureka.instance.ip-address=${targetENVIP} \"" /apollo-config/${targetENV}/scripts/startup.sh
	      sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -Deureka.instance.ip-address=${targetENVIP} \"" /apollo-admin/${targetENV}/scripts/startup.sh
    fi
  fi
    /apollo-config/${targetENV}/scripts/startup.sh
    /apollo-admin/${targetENV}/scripts/startup.sh
}

function startPortal()
{
  if [[ ! -d "/apollo-portal/scripts" ]];then
    unzip /apollo-portal-${VERSION}-github.zip -d /apollo-portal
    sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -Dspring.datasource.url=${PORTAL_DB} \"" /apollo-portal/scripts/startup.sh
    if [[ -n "${PORTAL_DB_USER}" ]];then
      sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -Dspring.datasource.username=${PORTAL_DB_USER} \"" /apollo-portal/scripts/startup.sh
    fi
    if [[ -n "${PORTAL_DB_PWD}" ]];then
      sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -Dspring.datasource.password=${PORTAL_DB_PWD} \"" /apollo-portal/scripts/startup.sh
    fi
    if [[ -n "${PORTAL_PORT}" ]];then
      sed -i -e "s/^SERVER_PORT=.*$/SERVER_PORT=${PORTAL_PORT}/" /apollo-portal/scripts/startup.sh
    fi

    if [[ -n "${DEV_URL}" ]];then
        sed -i -r "/-Ddev_meta=.*$/d" /apollo-portal/scripts/startup.sh
        sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -Ddev_meta=${DEV_URL}/\"" /apollo-portal/scripts/startup.sh
    fi
    if [[ -n "${FAT_URL}" ]];then
        sed -i -r "/-Dfat_meta=.*$/d" /apollo-portal/scripts/startup.sh
        sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -Dfat_meta=${FAT_URL}/\"" /apollo-portal/scripts/startup.sh
    fi
    if [[ -n "${UAT_URL}" ]];then
        sed -i -r "/-Duat_meta=.*$/d" /apollo-portal/scripts/startup.sh
        sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -Duat_meta=${UAT_URL}/\"" /apollo-portal/scripts/startup.sh
    fi
    if [[ -n "${PRO_URL}" ]];then
        sed -i -r "/-Dpro_meta=.*$/d" /apollo-portal/scripts/startup.sh
        sed -i -e "/^SERVER_PORT=.*$/a\export JAVA_OPTS=\"\$JAVA_OPTS -Dpro_meta=${PRO_URL}/\"" /apollo-portal/scripts/startup.sh
    fi
  fi
}


if [ "$#" == "0" ];then
# portal
    if [[ -n "${PORTAL_DB}" ]];then
        startPortal
    fi

# dev
      if [[ -n "${DEV_URL}" ]];then
          echo "conn remote dev server."
      elif [[ -n "${DEV_DB}" ]];then
          startENV dev ${DEV_DB} ${DEV_DB_USER} ${DEV_DB_PWD} ${DEV_ADMIN_PORT} ${DEV_CONFIG_PORT} ${DEV_IP}
      fi

# fat
      if [[ -n "${FAT_URL}" ]];then
          echo "conn remote fat server."
      elif [[ -n "${FAT_DB}" ]];then
          startENV fat ${FAT_DB} ${FAT_DB_USER} ${FAT_DB_PWD} ${FAT_ADMIN_PORT} ${FAT_CONFIG_PORT} ${FAT_IP}
      fi

# uat
      if [[ -n "${UAT_URL}" ]];then
          echo "conn remote fat server."
      elif [[ -n "${UAT_DB}" ]];then
          startENV uat ${UAT_DB} ${UAT_DB_USER} ${UAT_DB_PWD} ${UAT_ADMIN_PORT} ${UAT_CONFIG_PORT} ${UAT_IP}
      fi

# pro
      if [[ -n "${PRO_URL}" ]];then
          echo "conn remote pro server."
      elif [[ -n "${PRO_DB}" ]];then
          startENV pro ${PRO_DB} ${PRO_DB_USER} ${PRO_DB_PWD} ${PRO_ADMIN_PORT} ${PRO_CONFIG_PORT} ${PRO_IP}

      fi
# 若是早于config服务启动,则有概率会一直找不到config
      if [[ -n "${PORTAL_DB}" ]];then
          /apollo-portal/scripts/startup.sh
      fi

# healthcheck
    loop=1
    while [ ${loop} -eq 1 ]
    do
        /usr/local/bin/healthcheck.sh || exit 1
        sleep 300
    done

else
    exec "$@"
fi